{"ast":null,"code":"import _slicedToArray from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/Home.js\";\nimport React, { useState } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../config';\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\nimport RMDBLogo from './images/reactMovie_logo.png'; // Custom Hook\n\nimport { useHomeFetch } from './hooks/useHomeFetch';\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const _useHomeFetch = useHomeFetch(),\n        _useHomeFetch2 = _slicedToArray(_useHomeFetch, 2),\n        _useHomeFetch2$ = _useHomeFetch2[0],\n        _useHomeFetch2$$state = _useHomeFetch2$.state,\n        movies = _useHomeFetch2$$state.movies,\n        currentPage = _useHomeFetch2$$state.currentPage,\n        heroImage = _useHomeFetch2$$state.heroImage,\n        totalPages = _useHomeFetch2$$state.totalPages,\n        loading = _useHomeFetch2$.loading,\n        error = _useHomeFetch2$.error,\n        fetchMovies = _useHomeFetch2[1];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setSearchTerm = _useState2[1];\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&query=\").concat(searchTerm, \"&page=\").concat(currentPage + 1, \"}\");\n    const popularEndpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&page=\").concat(currentPage + 1);\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n    fetchMovies(endpoint);\n  };\n\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Something went wrong\");\n  if (!movies[0]) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(HeroImage, {\n    image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n    title: heroImage.original_title,\n    text: heroImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    header: searchTerm ? 'Search Result' : 'Popular Movies',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, movies.map(movie => React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), currentPage < totalPages && !loading && React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    callback: loadMoreMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/Home.js"],"names":["React","useState","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","Grid","MovieThumb","LoadMoreBtn","Spinner","RMDBLogo","useHomeFetch","NoImage","Home","state","movies","currentPage","heroImage","totalPages","loading","error","fetchMovies","searchTerm","setSearchTerm","loadMoreMovies","searchEndpoint","popularEndpoint","endpoint","backdrop_path","original_title","overview","map","movie","id","poster_path"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport {\n    API_URL,\n    API_KEY,\n    IMAGE_BASE_URL,\n    POSTER_SIZE,\n    BACKDROP_SIZE\n} from '../config'\nimport HeroImage from './elements/HeroImage'\nimport SearchBar from './elements/SearchBar'\nimport Grid from './elements/Grid'\nimport MovieThumb from './elements/MovieThumb'\nimport LoadMoreBtn from './elements/LoadMoreBtn'\nimport Spinner from './elements/Spinner'\nimport RMDBLogo from './images/reactMovie_logo.png'\n\n// Custom Hook\nimport { useHomeFetch } from './hooks/useHomeFetch'\nimport NoImage from './images/no_image.jpg'\n\nconst Home = () => {\n\n    const [{\n        state: {movies, currentPage, heroImage, totalPages }, \n            loading, \n            error\n        },\n        fetchMovies\n    ] = useHomeFetch()\n    const [searchTerm, setSearchTerm] = useState('')\n\n    const loadMoreMovies = () => {\n        const searchEndpoint =`${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&page=${currentPage+1}}`\n        const popularEndpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${currentPage + 1}`\n        const endpoint =searchTerm ? searchEndpoint : popularEndpoint\n\n        fetchMovies(endpoint)\n    }\n    if (error) return <div>Something went wrong</div>\n    if (!movies[0]) return <Spinner />\n    return (\n        <>\n            <HeroImage \n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n                title={heroImage.original_title}\n                text={heroImage.overview}\n            /> \n            <SearchBar />\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'} >\n                {movies.map (movie => (\n                    <MovieThumb\n                        key={movie.id}\n                        clickable\n                        image={movie.poster_path \n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                            : NoImage\n                         }\n                         movieId={movie.id}\n                         movieName={movie.original_title}\n                    />\n                ))}\n            </Grid>\n            {loading && <Spinner />}\n            {currentPage < totalPages && !loading && (\n                <LoadMoreBtn text='Load More' callback={loadMoreMovies}/>\n            )}\n                       \n        </>\n    )\n}\nexport default Home"]},"metadata":{},"sourceType":"module"}