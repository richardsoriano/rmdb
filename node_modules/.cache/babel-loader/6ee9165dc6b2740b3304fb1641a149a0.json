{"ast":null,"code":"import _defineProperty from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\nexport const useHomeFetch = () => {\n  const _useState = useState({\n    movies: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        searchTerm = _useState8[0],\n        setSearchTerm = _useState8[1];\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => _objectSpread({}, prev, {\n        movies: isLoadMore !== -1 ? [...prev.movies, ...result.results] : [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      console.log('grabbing from home state');\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false);\n    } else {\n      console.log('grabbing from API');\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, []);\n  useEffect(() => {\n    if (!searchTerm) {\n      console.log('writing to storage state');\n      sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  }, [searchTerm, state]); // return all 3 states, plus the function so we can share it with the home component\n\n  return [{\n    state,\n    loading,\n    error\n  }, fetchMovies];\n};","map":{"version":3,"sources":["/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/hooks/useHomeFetch.js"],"names":["useState","useEffect","POPULAR_BASE_URL","useHomeFetch","movies","state","setState","loading","setLoading","error","setError","searchTerm","setSearchTerm","fetchMovies","endpoint","isLoadMore","search","result","fetch","json","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","sessionStorage","homeState","JSON","parse","setItem","stringify"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAgC,cAAhC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAK;AAAA,oBACFH,QAAQ,CAAC;AAACI,IAAAA,MAAM,EAAC;AAAR,GAAD,CADN;AAAA;AAAA,QACtBC,KADsB;AAAA,QACfC,QADe;;AAAA,qBAECN,QAAQ,CAAC,KAAD,CAFT;AAAA;AAAA,QAEtBO,OAFsB;AAAA,QAEbC,UAFa;;AAAA,qBAGHR,QAAQ,CAAC,KAAD,CAHL;AAAA;AAAA,QAGtBS,KAHsB;AAAA,QAGfC,QAHe;;AAAA,qBAKOV,QAAQ,CAAC,EAAD,CALf;AAAA;AAAA,QAKtBW,UALsB;AAAA,QAKVC,aALU;;AAM7B,QAAMC,WAAW,GAAG,MAAMC,QAAN,IAAkB;AAClCJ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMO,UAAU,GAAGD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAnB;;AAEA,QAAG;AACC,YAAMC,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACJ,QAAD,CAAZ,EAAwBK,IAAxB,EAArB;AAEAb,MAAAA,QAAQ,CAACc,IAAI,sBACNA,IADM;AAEThB,QAAAA,MAAM,EACFW,UAAU,KAAK,CAAC,CAAhB,GACE,CAAC,GAAGK,IAAI,CAAChB,MAAT,EAAiB,GAAGa,MAAM,CAACI,OAA3B,CADF,GAEE,CAAC,GAAGJ,MAAM,CAACI,OAAX,CALG;AAMTC,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAAL,IAAkBL,MAAM,CAACI,OAAP,CAAe,CAAf,CANpB;AAOTE,QAAAA,WAAW,EAAEN,MAAM,CAACO,IAPX;AAQTC,QAAAA,UAAU,EAAER,MAAM,CAACS;AARV,QAAL,CAAR;AAWH,KAdD,CAcE,OAAMjB,KAAN,EAAa;AACXC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACH;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAzBD;;AA0BAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI4B,cAAc,CAACC,SAAnB,EAA6B;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAtB,MAAAA,QAAQ,CAACyB,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,SAA1B,CAAD,CAAR;AACAtB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJD,MAIO;AACHmB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAf,MAAAA,WAAW,CAACX,gBAAD,CAAX;AACH;AAEJ,GAXQ,EAWN,EAXM,CAAT;AAaAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACU,UAAL,EAAiB;AACbgB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAC,MAAAA,cAAc,CAACI,OAAf,CAAuB,WAAvB,EAAoCF,IAAI,CAACG,SAAL,CAAe7B,KAAf,CAApC;AACH;AACJ,GALQ,EAKN,CAACM,UAAD,EAAaN,KAAb,CALM,CAAT,CA7C6B,CAmD7B;;AACA,SAAO,CAAC;AAAEA,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAD,EAA2BI,WAA3B,CAAP;AACH,CArDM","sourcesContent":["import { useState, useEffect } from 'react'\nimport { POPULAR_BASE_URL} from '../../config'\n\nexport const useHomeFetch = () =>{\n    const [state, setState ] = useState({movies:[]})\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n  \n    const [searchTerm, setSearchTerm] = useState('')\n    const fetchMovies = async endpoint => {\n        setError(false)\n        setLoading(true)\n\n        const isLoadMore = endpoint.search('page')\n\n        try{\n            const result = await (await fetch(endpoint)).json()\n\n            setState(prev =>({\n                ...prev,\n                movies: \n                    isLoadMore !== -1\n                    ? [...prev.movies, ...result.results]\n                    : [...result.results], \n                heroImage: prev.heroImage || result.results[0],\n                currentPage: result.page,\n                totalPages: result.total_pages\n            }))\n        \n        } catch(error) {\n            setError(true)\n            console.log(error)\n        }\n        setLoading(false)\n    }\n    useEffect(() => {\n        if (sessionStorage.homeState){\n            console.log('grabbing from home state')\n            setState(JSON.parse(sessionStorage.homeState))\n            setLoading(false)\n        } else {\n            console.log('grabbing from API')\n            \n            fetchMovies(POPULAR_BASE_URL)           \n        }\n\n    }, [])\n\n    useEffect(() => {\n        if (!searchTerm) {\n            console.log('writing to storage state')\n            sessionStorage.setItem('homeState', JSON.stringify(state))\n        }\n    }, [searchTerm, state])\n    // return all 3 states, plus the function so we can share it with the home component\n    return [{ state, loading, error}, fetchMovies]\n}\n\n"]},"metadata":{},"sourceType":"module"}