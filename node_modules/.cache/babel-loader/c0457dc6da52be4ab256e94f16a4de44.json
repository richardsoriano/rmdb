{"ast":null,"code":"var _jsxFileName = \"/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/elements/MovieInfo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NoImage from '../images/no_image.jpg';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport MovieThumb from './MovieThumb';\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\n\nconst MovieInfo = ({\n  movie\n}) => React.createElement(StyledMovieInfo, {\n  backdrop: movie.backdrop_path,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"movieinfo-content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"movieinfo-thumb\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(MovieThumb, {\n  image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : NoImage,\n  clickable: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"movieinfo-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, movie.title), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"PLOT\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, movie.overview), React.createElement(\"div\", {\n  className: \"rating-director\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"IMDB RATING\"), React.createElement(\"div\", {\n  className: \"score\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, movie.vote_average)), React.createElement(\"div\", {\n  className: \"director\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"DIRECTOR\", movie.directors.length > 1 ? 'S' : ''), movie.directors.map(element => React.createElement(\"p\", {\n  key: element.credit_id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, element.name))), React.createElement(\"div\", {\n  className: \"director\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"WRITER\", movie.writers.length > 1 ? 'S' : ''), movie.writers.map(element => React.createElement(\"p\", {\n  key: element.credit_id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, element.name)))))));\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array\n};\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/elements/MovieInfo.js"],"names":["React","PropTypes","NoImage","IMAGE_BASE_URL","POSTER_SIZE","MovieThumb","StyledMovieInfo","MovieInfo","movie","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","element","credit_id","name","writers","propTypes","object","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,cAA5C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACd,oBAAC,eAAD;AAAiB,EAAA,QAAQ,EAAEA,KAAK,CAACC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,UAAD;AACI,EAAA,KAAK,EACDD,KAAK,CAACE,WAAN,aACKP,cADL,SACsBC,WADtB,SACoCI,KAAK,CAACE,WAD1C,IAEER,OAJV;AAMI,EAAA,SAAS,EAAE,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAWI;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKM,KAAK,CAACG,KAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIH,KAAK,CAACI,QAAV,CAHJ,EAKI;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,EAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBJ,KAAK,CAACK,YAA9B,CAFJ,CADJ,EAKI;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaL,KAAK,CAACM,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,GAA6B,GAA7B,GAAmC,EAAhD,CADJ,EAEKP,KAAK,CAACM,SAAN,CAAgBE,GAAhB,CAAoBC,OAAO,IACxB;AAAG,EAAA,GAAG,EAAEA,OAAO,CAACC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BD,OAAO,CAACE,IAApC,CADH,CAFL,CALJ,EAWI;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAWX,KAAK,CAACY,OAAN,CAAcL,MAAd,GAAuB,CAAvB,GAA2B,GAA3B,GAAiC,EAA5C,CADJ,EAEKP,KAAK,CAACY,OAAN,CAAcJ,GAAd,CAAkBC,OAAO,IACtB;AAAG,EAAA,GAAG,EAAEA,OAAO,CAACC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BD,OAAO,CAACE,IAApC,CADH,CAFL,CAXJ,CALJ,CAXJ,CADJ,CADJ;;AAyCAZ,SAAS,CAACc,SAAV,GAAsB;AAClBb,EAAAA,KAAK,EAAEP,SAAS,CAACqB,MADC;AAElBR,EAAAA,SAAS,EAAEb,SAAS,CAACsB;AAFH,CAAtB;AAKA,eAAehB,SAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport NoImage from '../images/no_image.jpg'\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\n\nimport MovieThumb from './MovieThumb'\n\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo'\n\nconst MovieInfo = ({ movie }) => (\n    <StyledMovieInfo backdrop={movie.backdrop_path} >\n        <div className='movieinfo-content' >\n            <div className='movieinfo-thumb'>\n                <MovieThumb \n                    image={\n                        movie.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                        : NoImage\n                    }\n                    clickable={false}\n                />\n            </div>\n            <div className='movieinfo-text'>\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n\n                <div className='rating-director'>\n                    <div>\n                        <h3>IMDB RATING</h3>\n                        <div className='score'>{movie.vote_average}</div>\n                    </div>\n                    <div className='director'>\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                        {movie.directors.map(element => (\n                            <p key={element.credit_id}>{element.name}</p>\n                        ))}\n                    </div>\n                    <div className='director'>\n                        <h3>WRITER{movie.writers.length > 1 ? 'S' : ''}</h3>\n                        {movie.writers.map(element => (\n                            <p key={element.credit_id}>{element.name}</p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </StyledMovieInfo>\n)\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object,\n    directors: PropTypes.array,\n}\n\nexport default MovieInfo"]},"metadata":{},"sourceType":"module"}