{"ast":null,"code":"import _defineProperty from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../config';\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\nconst Home = () => {\n  const _useState = useState({\n    movies: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => _objectSpread({}, setState, {\n        movies: [...result.results],\n        heroImage: prev.heroImage || result.results[0]\n      }));\n    } catch (error) {}\n\n    setLoading(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(HeroImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(MovieThumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(LoadMoreBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/Home.js"],"names":["React","useState","useEffect","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","Grid","MovieThumb","LoadMoreBtn","Spinner","Home","movies","state","setState","loading","setLoading","error","setError","fetchMovies","endpoint","result","fetch","json","prev","results","heroImage"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SACIC,OADJ,EAEIC,OAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,QAMO,WANP;AAOA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACYb,QAAQ,CAAC;AAACc,IAAAA,MAAM,EAAC;AAAR,GAAD,CADpB;AAAA;AAAA,QACRC,KADQ;AAAA,QACDC,QADC;;AAAA,qBAEehB,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAERiB,OAFQ;AAAA,QAECC,UAFD;;AAAA,qBAGWlB,QAAQ,CAAC,KAAD,CAHnB;AAAA;AAAA,QAGRmB,KAHQ;AAAA,QAGDC,QAHC;;AAKf,QAAMC,WAAW,GAAG,MAAMC,QAAN,IAAiB;AACjCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACC,YAAMK,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAArB;AACAT,MAAAA,QAAQ,CAACU,IAAI,sBACNV,QADM;AAETF,QAAAA,MAAM,EAAE,CAAC,GAAGS,MAAM,CAACI,OAAX,CAFC;AAGTC,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAAL,IAAkBL,MAAM,CAACI,OAAP,CAAe,CAAf;AAHpB,QAAL,CAAR;AAMH,KARD,CAQE,OAAMR,KAAN,EAAa,CAEd;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAfD;;AAgBA,SACI,0CACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CA/BD","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport {\n    API_URL,\n    API_KEY,\n    IMAGE_BASE_URL,\n    POSTER_SIZE,\n    BACKDROP_SIZE\n} from '../config'\nimport HeroImage from './elements/HeroImage'\nimport SearchBar from './elements/SearchBar'\nimport Grid from './elements/Grid'\nimport MovieThumb from './elements/MovieThumb'\nimport LoadMoreBtn from './elements/LoadMoreBtn'\nimport Spinner from './elements/Spinner'\n\nconst Home = () => {\n    const [state, setState ] = useState({movies:[]})\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n    \n    const fetchMovies = async endpoint =>{\n        setError(false)\n        setLoading(true)\n        try{\n            const result = await (await fetch(endpoint)).json()\n            setState(prev =>({\n                ...setState,\n                movies: [...result.results], \n                heroImage: prev.heroImage || result.results[0] \n            }))\n            \n        } catch(error) {\n\n        }\n        setLoading(false)\n    }\n    return (\n        <>\n            <HeroImage />\n            <SearchBar />\n            <Grid />\n            <MovieThumb />\n            <LoadMoreBtn />\n            <Spinner />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}