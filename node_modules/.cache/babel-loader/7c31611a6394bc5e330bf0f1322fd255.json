{"ast":null,"code":"import _slicedToArray from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/Movie.js\";\nimport React from 'react'; // import components\n\nimport Navigation from './elements/Navigation';\nimport MovieInfo from './elements/MovieInfo';\nimport MovieInfoBar from './elements/MovieInfoBar';\nimport Actor from './elements/Actor';\nimport Grid from './elements/Grid';\nimport Spinner from './elements/Spinner';\nimport { useMovieFetch } from './hooks/useMovieFetch';\n\nconst Movie = ({\n  movieId\n}) => {\n  const _useMovieFetch = useMovieFetch(movieId),\n        _useMovieFetch2 = _slicedToArray(_useMovieFetch, 3),\n        movie = _useMovieFetch2[0],\n        loading = _useMovieFetch2[1],\n        error = _useMovieFetch2[2];\n\n  console.log('movie');\n  console.log(movie);\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Something went wrong.\");\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Navigation, {\n    movie: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(MovieInfo, {\n    movie: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(MovieInfoBar, {\n    time: movie.runtime,\n    budget: movie.budget,\n    revenue: movie.revenue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Actor, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nexport default Movie;","map":{"version":3,"sources":["/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/Movie.js"],"names":["React","Navigation","MovieInfo","MovieInfoBar","Actor","Grid","Spinner","useMovieFetch","Movie","movieId","movie","loading","error","console","log","original_title","runtime","budget","revenue"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,yBACKF,aAAa,CAACE,OAAD,CADlB;AAAA;AAAA,QACpBC,KADoB;AAAA,QACbC,OADa;AAAA,QACJC,KADI;;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACX,MAAID,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,SACA,0CACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAED,KAAK,CAACK,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAY,IAAA,KAAK,EAAEL,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAEA,KAAK,CAACM,OADhB;AAEI,IAAA,MAAM,EAAEN,KAAK,CAACO,MAFlB;AAGI,IAAA,OAAO,EAAEP,KAAK,CAACQ,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,CADA;AAcH,CArBD;;AAsBA,eAAeV,KAAf","sourcesContent":["import React from 'react'\n\n// import components\nimport Navigation from './elements/Navigation'\nimport MovieInfo from './elements/MovieInfo'\nimport MovieInfoBar from './elements/MovieInfoBar'\nimport Actor from './elements/Actor'\nimport Grid from './elements/Grid'\nimport Spinner from './elements/Spinner'\n\nimport { useMovieFetch } from './hooks/useMovieFetch'\n\nconst Movie = ({ movieId }) => {\n    const [movie, loading, error] = useMovieFetch(movieId)\n    console.log('movie')\n    console.log(movie)\n\n    if (error) return <div>Something went wrong.</div>\n    if (loading) return <Spinner />\n    return (\n    <>\n        <Navigation movie={movie.original_title}/>\n        <MovieInfo  movie={movie}/>\n        <MovieInfoBar \n            time={movie.runtime}\n            budget={movie.budget}\n            revenue={movie.revenue}    \n        />\n        <Grid>\n            <Actor />\n        </Grid>\n    </>\n    )\n}\nexport default Movie"]},"metadata":{},"sourceType":"module"}