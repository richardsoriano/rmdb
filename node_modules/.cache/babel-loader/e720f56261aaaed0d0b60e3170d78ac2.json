{"ast":null,"code":"import _slicedToArray from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../config';\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\nconst Home = () => {\n  const _useState = useState({\n    movies: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(HeroImage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(MovieThumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(LoadMoreBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/Home.js"],"names":["React","useState","useEffect","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","Grid","MovieThumb","LoadMoreBtn","Spinner","Home","movies","state","setState","loading","setLoading","error","setError"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SACIC,OADJ,EAEIC,OAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,QAMO,WANP;AAOA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACYb,QAAQ,CAAC;AAACc,IAAAA,MAAM,EAAC;AAAR,GAAD,CADpB;AAAA;AAAA,QACRC,KADQ;AAAA,QACDC,QADC;;AAAA,qBAEehB,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAERiB,OAFQ;AAAA,QAECC,UAFD;;AAAA,qBAGWlB,QAAQ,CAAC,KAAD,CAHnB;AAAA;AAAA,QAGRmB,KAHQ;AAAA,QAGDC,QAHC;;AAIf,SACI,0CACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CAdD","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport {\n    API_URL,\n    API_KEY,\n    IMAGE_BASE_URL,\n    POSTER_SIZE,\n    BACKDROP_SIZE\n} from '../config'\nimport HeroImage from './elements/HeroImage'\nimport SearchBar from './elements/SearchBar'\nimport Grid from './elements/Grid'\nimport MovieThumb from './elements/MovieThumb'\nimport LoadMoreBtn from './elements/LoadMoreBtn'\nimport Spinner from './elements/Spinner'\n\nconst Home = () => {\n    const [state, setState ] = useState({movies:[]})\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n    return (\n        <>\n            <HeroImage />\n            <SearchBar />\n            <Grid />\n            <MovieThumb />\n            <LoadMoreBtn />\n            <Spinner />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}