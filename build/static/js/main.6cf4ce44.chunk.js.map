{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/hooks/useHomeFetch.js","components/Home.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/hooks/useMovieFetch.js","components/Movie.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","movieId","clickable","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndpoint","popularEndpoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","writers","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","setMovie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cf4ce44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react'\nimport { Link } from '@reach/router'\n\nimport RMDBLogo from '../images/reactMovie_logo.png'\nimport TMDBLogo from '../images/tmdb_logo.svg'\n\nimport { \n    StyledHeader,\n    StyledRMDBLogo,\n    StyledTMDBLogo\n} from '../styles/StyledHeader'\n\nconst Header = () => (\n    <StyledHeader>\n        <div className='header-content'>\n            <Link to='/'>\n                <StyledRMDBLogo src={RMDBLogo} alt='rmdb-logo' />\n            </Link>\n            \n            <StyledTMDBLogo src={TMDBLogo} alt='tmdb-logo' />\n        </div>\n   \n    </StyledHeader>\n)\n\nexport default Header","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst SEARCH_BASE_URL =`${API_URL}search/movie?api_key=${API_KEY}&query=`\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { SEARCH_BASE_URL, \n    POPULAR_BASE_URL,\n    API_URL, \n    API_KEY, \n    IMAGE_BASE_URL, \n    BACKDROP_SIZE, \n    POSTER_SIZE };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { StyledHeroImage } from '../styles/StyledHeroImage'\n\n\nconst HeroImage = ({ image, title, text}) => (\n<StyledHeroImage image={image}>\n    <div className='heroimage-content'>     \n        <div className='heroimage-text'>\n            <h1>{title}</h1>\n            <p>{text}</p>\n        </div>\n    </div>\n</StyledHeroImage>\n)\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string,\n}\nexport default HeroImage","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React , {useState, useRef} from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport PropTypes from 'prop-types'\n\nimport {\n    StyledSearchBar,\n    StyledSearchBarContent\n} from '../styles/StyledSearchBar'\n\nconst SearchBar = ({ callback }) => {\n    const [state, setState]  = useState('')\n    const timeOut = useRef(null)\n\n    const doSearch = event =>{\n        const { value } = event.target\n        \n        clearTimeout(timeOut.current)\n        setState(value)\n\n        timeOut.current = setTimeout(() => {\n            callback(value)\n        },500)\n    }\n    return (\n        <StyledSearchBar>\n            <StyledSearchBarContent>\n                <FontAwesome className='fa-search' name='search' size='2x' />\n                <input \n                    type='text'\n                    placeholder='Search Movie'\n                    onChange={doSearch}\n                    value={state}\n                />\n            </StyledSearchBarContent>\n        </StyledSearchBar>\n    )\n}\n\nSearchBar.propTypes = {\n    callback: PropTypes.func\n}\nexport default SearchBar","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {StyledGrid, StyledGridContent } from '../styles/StyledGrid'\n\nconst Grid = ({ header, children }) => (\n    <StyledGrid>\n        <h1>{header}</h1>\n        <StyledGridContent>{children}</StyledGridContent>\n        \n    </StyledGrid>\n)\n\nGrid.propTypes = {\n    header: PropTypes.string,\n}\nexport default Grid","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react'\nimport { Link } from '@reach/router'\nimport PropTypes from 'prop-types'\n\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb'\n\nconst MovieThumb = ({ image, movieId, clickable}) => \n(\n    <StyledMovieThumb>\n      {clickable? (\n            <Link to={`/${movieId}`} >\n                <img className='clickable' src={image} alt='moviethumb' />\n            </Link>\n \n        ) : (\n            <img src={image} alt='moviethumb' />\n        )} \n       \n    </StyledMovieThumb>\n)\nMovieThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool,\n}\n\nexport default MovieThumb","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn'\n\nconst LoadMoreBtn = ({ text, callback}) => (\n    <StyledLoadMoreBtn type='button' onClick={callback}>\n        {text}\n    </StyledLoadMoreBtn>\n)\n\nLoadMoreBtn.propTypes = {\n    text: PropTypes.string,\n    callback: PropTypes.func,\n}\nexport default LoadMoreBtn","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react'\n\nimport { StyledSpinner } from '../styles/StyledSpinner'\n\nconst Spinner = () => <StyledSpinner />\n\nexport default Spinner","import { useState, useEffect } from 'react'\nimport { POPULAR_BASE_URL} from '../../config'\n\nexport const useHomeFetch = searchTerm =>{\n    const [state, setState ] = useState({movies:[]})\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n  \n     const fetchMovies = async endpoint => {\n        setError(false)\n        setLoading(true)\n\n        const isLoadMore = endpoint.search('page')\n\n        try{\n            const result = await (await fetch(endpoint)).json()\n            setState(prev =>({\n                ...prev,\n                movies: \n                    isLoadMore !== -1\n                    ? [...prev.movies, ...result.results]\n                    : [...result.results], \n                heroImage: prev.heroImage || result.results[0],\n                currentPage: result.page,\n                totalPages: result.total_pages\n            }))\n        \n        } catch(error) {\n            setError(true)\n            console.log(error)\n        }\n        setLoading(false)\n    }\n    useEffect(() => {\n        if (sessionStorage.homeState){\n            setState(JSON.parse(sessionStorage.homeState))\n            setLoading(false)\n        } else {\n            fetchMovies(POPULAR_BASE_URL)           \n        }\n\n    }, [])\n\n    useEffect(() => {\n        if (!searchTerm) {\n            sessionStorage.setItem('homeState', JSON.stringify(state))\n        }\n    }, [searchTerm, state])\n    // return all 3 states, plus the function so we can share it with the home component\n    return [{ state, loading, error}, fetchMovies]\n}\n\n","import React, { useState } from 'react'\n\nimport {\n    POPULAR_BASE_URL,\n    SEARCH_BASE_URL,\n    IMAGE_BASE_URL,\n    POSTER_SIZE,\n    BACKDROP_SIZE\n} from '../config'\nimport HeroImage from './elements/HeroImage'\nimport SearchBar from './elements/SearchBar'\nimport Grid from './elements/Grid'\nimport MovieThumb from './elements/MovieThumb'\nimport LoadMoreBtn from './elements/LoadMoreBtn'\nimport Spinner from './elements/Spinner'\n\n\n// Custom Hook\nimport { useHomeFetch } from './hooks/useHomeFetch'\nimport NoImage from './images/no_image.jpg'\n\nconst Home = () => {\n    const [searchTerm, setSearchTerm] = useState('')\n   \n    const [{\n        state: {movies, currentPage, heroImage, totalPages }, \n            loading, \n            error\n        },\n        fetchMovies\n    ] = useHomeFetch(searchTerm)\n   \n    const searchMovies = search => {\n        const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL\n        \n        setSearchTerm(search)\n        fetchMovies(endpoint)\n    }\n    const loadMoreMovies = () => {\n        const searchEndpoint =`${SEARCH_BASE_URL}${searchTerm}&page=${currentPage+1}}`\n        const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`\n        const endpoint =searchTerm ? searchEndpoint : popularEndpoint\n\n        fetchMovies(endpoint)\n    }\n    if (error) return <div>Something went wrong</div>\n    if (!movies[0]) return <Spinner />\n    return (\n        <>\n        { !searchTerm && (\n            <HeroImage \n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n                title={heroImage.original_title}\n                text={heroImage.overview}\n            /> )\n        }\n            <SearchBar callback={searchMovies} />\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'} >\n                {movies.map (movie => (\n                    <MovieThumb\n                        key={movie.id}\n                        clickable\n                        image={movie.poster_path \n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                            : NoImage\n                         }\n                         movieId={movie.id}\n                         movieName={movie.original_title}\n                    />\n                ))}\n            </Grid>\n            {loading && <Spinner />}\n            {currentPage < totalPages && !loading && (\n                <LoadMoreBtn text='Load More' callback={loadMoreMovies}/>\n            )}\n                       \n        </>\n    )\n}\nexport default Home","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react'\nimport { Link } from '@reach/router'\nimport PropTypes from 'prop-types'\n\nimport { StyledNavigation } from '../styles/StyledNavigation'\n\nconst Navigation = ({ movie }) => (\n    <StyledNavigation>\n        <div className='navigation-content'>\n            <Link to='/'>\n                <p>Home</p>\n            </Link>\n            <p>||</p>\n            <p>{movie}</p>\n        </div>\n    </StyledNavigation>\n)\n\nNavigation.propTypes = {\n    movie: PropTypes.string\n}\nexport default Navigation","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport NoImage from '../images/no_image.jpg'\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\n\nimport MovieThumb from './MovieThumb'\n\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo'\n\nconst MovieInfo = ({ movie }) => (\n    <StyledMovieInfo backdrop={movie.backdrop_path} >\n        <div className='movieinfo-content' >\n            <div className='movieinfo-thumb'>\n                <MovieThumb \n                    image={\n                        movie.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                        : NoImage\n                    }\n                    clickable={false}\n                />\n            </div>\n            <div className='movieinfo-text'>\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n\n                <div className='rating-director'>\n                    <div>\n                        <h3>IMDB RATING</h3>\n                        <div className='score'>{movie.vote_average}</div>\n                    </div>\n                    <div className='director'>\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                        {movie.directors.map(element => (\n                            <p key={element.credit_id}>{element.name}</p>\n                        ))}\n                    </div>\n                    <div className='director'>\n                        <h3>WRITER{movie.writers.length > 1 ? 'S' : ''}</h3>\n                        {movie.writers.map(element => (\n                            <p key={element.credit_id}>{element.name}</p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </StyledMovieInfo>\n)\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object,\n    directors: PropTypes.array,\n}\n\nexport default MovieInfo","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport { calcTime, convertMoney } from '../../helpers'\nimport PropTypes from 'prop-types'\n\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar'\n\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n    <StyledMovieInfoBar>\n        <div className='movieinfobar-content'>\n            <div className='movieinfobar-content-col'>\n                <FontAwesome className='fa-time' name='clock-0' size='2x' />\n                    <span className='movieinfobar-info'>\n                        Running time: {calcTime(time)}\n                    </span>\n            </div>\n            <div className='movieinfobar-content-col'>\n                <FontAwesome className='fa-budget' name='money' size='2x' />\n                    <span className='movieinfobar-info'>\n                        Budget {convertMoney(budget)}\n                    </span>\n            </div>\n            <div className='movieinfobar-content-col'>\n                <FontAwesome className='fa-revenue' name='ticket' size='2x' />\n                    <span className='movieinfobar-info'>\n                        Revenue: {convertMoney(revenue)}\n                    </span>\n            </div>\n        </div>\n    </StyledMovieInfoBar>\n)\n\nMovieInfoBar.propTypes = {\n    time : PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n}\nexport default MovieInfoBar","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport NoImage from '../images/no_image.jpg'\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\nimport { StyledActor } from '../styles/StyledActor'\n\nconst Actor = ({ actor }) => (\n    <StyledActor>\n        <img\n            src={\n                actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n            alt='actorthumb'\n        />\n        <span className='actor-name'>{actor.name}</span>\n        <span className='actor-character'>{actor.character}</span>\n    </StyledActor>\n)\n\nActor.propTypes = {\n    actor: PropTypes.object\n}\nexport default Actor","import { useState, useEffect, useCallback } from 'react'\nimport { API_URL, API_KEY } from '../../config'\n\nexport const useMovieFetch = movieId => {\n    const [movie, setMovie] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n\n    const fetchData = useCallback(async () => {\n        setError(false)\n        setLoading(true)\n        try {\n            const endpoint = `${API_URL}/movie/${movieId}?api_key=${API_KEY}`\n            const result = await (await (await fetch(endpoint)).json())\n            \n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n            const creditsResult = await (await fetch(creditsEndpoint)).json()\n            \n            const directors = creditsResult.crew.filter( member => member.job ==='Director')\n            const writers = creditsResult.crew.filter( member => member.job === 'Screenplay')\n            console.log('writers',writers)\n            setMovie({...result,\n            actors: creditsResult.cast,\n            directors,\n            writers })\n        } catch (error) {\n            setError(true)\n        }\n        setLoading(false)\n    }, [movieId])\n    \n    useEffect(() => {\n        if (localStorage[movieId]) {\n            setMovie(JSON.parse(localStorage[movieId]))\n            setLoading(false)\n        } else {\n            fetchData()\n        }\n\n    }, [fetchData,movieId])\n    \n    useEffect(() =>{\n        localStorage.setItem(movieId, JSON.stringify(movie))\n    }, [movieId, movie])\n\n    return [movie, loading, error]\n}","import React from 'react'\n\n// import components\nimport Navigation from './elements/Navigation'\nimport MovieInfo from './elements/MovieInfo'\nimport MovieInfoBar from './elements/MovieInfoBar'\nimport Actor from './elements/Actor'\nimport Grid from './elements/Grid'\nimport Spinner from './elements/Spinner'\n\nimport { useMovieFetch } from './hooks/useMovieFetch'\n\nconst Movie = ({ movieId }) => {\n    const [movie, loading, error] = useMovieFetch(movieId)\n\n    if (error) return <div>Something went wrong.</div>\n    if (loading) return <Spinner />\n    return (\n    <>\n        <Navigation movie={movie.original_title}/>\n        <MovieInfo  movie={movie}/>\n        <MovieInfoBar \n            time={movie.runtime}\n            budget={movie.budget}\n            revenue={movie.revenue}    \n        />\n \n        <Grid header='Actors'>\n            {movie.actors.map(actor => (\n                <Actor \n                    key={actor.credit_id}\n                    actor={actor}\n                />\n            ))}\n\n        </Grid>\n    </>\n    )\n}\nexport default Movie","import React from 'react'\n\nconst NotFound = () => \n    (<div>Whoops... Nothing found here...</div>)\n\n\nexport default NotFound","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport { Router } from '@reach/router'\n\nimport Header from './elements/Header'\nimport Home from './Home'\nimport Movie from './Movie'\nimport NotFound from './NotFound'\nimport  { GlobalStyle } from './styles/GlobalStyle'\nconst App = () => \n(\n<>\n    <Header />\n    <Router>\n        <Home path='/'/>\n        <Movie path='/:movieId' />\n        <NotFound default />\n\n    </Router>\n    <GlobalStyle />\n</>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}