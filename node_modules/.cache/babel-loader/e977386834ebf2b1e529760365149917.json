{"ast":null,"code":"import _defineProperty from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/tatooine/Documents/dev/udemy/react/rmdb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nexport const useHomeFetch = () => {\n  const _useState = useState({\n    movies: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const fetchMovies = async endppoint => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => _objectSpread({}, setState, {\n        movies: [...result.results],\n        heroImage: prev.heroImage || result.results[0]\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMovies(\"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY));\n  }, []); // return all 3 states, plus the function so we can share it with the home component\n\n  return [{\n    state,\n    loading,\n    error\n  }, fetchMovies];\n};","map":{"version":3,"sources":["/Users/tatooine/Documents/dev/udemy/react/rmdb/src/components/hooks/useHomeFetch.js"],"names":["useState","useEffect","API_URL","API_KEY","useHomeFetch","movies","state","setState","loading","setLoading","error","setError","fetchMovies","endppoint","result","fetch","endpoint","json","prev","results","heroImage","console","log"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAK;AAAA,oBACFJ,QAAQ,CAAC;AAACK,IAAAA,MAAM,EAAC;AAAR,GAAD,CADN;AAAA;AAAA,QACtBC,KADsB;AAAA,QACfC,QADe;;AAAA,qBAECP,QAAQ,CAAC,KAAD,CAFT;AAAA;AAAA,QAEtBQ,OAFsB;AAAA,QAEbC,UAFa;;AAAA,qBAGHT,QAAQ,CAAC,KAAD,CAHL;AAAA;AAAA,QAGtBU,KAHsB;AAAA,QAGfC,QAHe;;AAK7B,QAAMC,WAAW,GAAG,MAAMC,SAAN,IAAmB;AACnCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAG;AACC,YAAMK,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACC,QAAD,CAAZ,EAAwBC,IAAxB,EAArB;AAEAV,MAAAA,QAAQ,CAACW,IAAI,sBACNX,QADM;AAETF,QAAAA,MAAM,EAAE,CAAC,GAAGS,MAAM,CAACK,OAAX,CAFC;AAGTC,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAAL,IAAkBN,MAAM,CAACK,OAAP,CAAe,CAAf;AAHpB,QAAL,CAAR;AAMH,KATD,CASE,OAAMT,KAAN,EAAa;AACXC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACH;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAlBD;;AAmBAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW,WAAIV,OAAJ,mCAAoCC,OAApC,EAAX;AACH,GAFQ,EAEN,EAFM,CAAT,CAxB6B,CA4B7B;;AACA,SAAO,CAAC;AAAEG,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAD,EAA2BE,WAA3B,CAAP;AACH,CA9BM","sourcesContent":["import { useState, useEffect } from 'react'\nimport { API_URL, API_KEY } from '../../config'\n\nexport const useHomeFetch = () =>{\n    const [state, setState ] = useState({movies:[]})\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n  \n    const fetchMovies = async endppoint => {\n        setError(false)\n        setLoading(true)\n\n        try{\n            const result = await (await fetch(endpoint)).json()\n\n            setState(prev =>({\n                ...setState,\n                movies: [...result.results], \n                heroImage: prev.heroImage || result.results[0] \n            }))\n        \n        } catch(error) {\n            setError(true)\n            console.log(error)\n        }\n        setLoading(false)\n    }\n    useEffect(() => {\n        fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY}`)\n    }, [])\n\n    // return all 3 states, plus the function so we can share it with the home component\n    return [{ state, loading, error}, fetchMovies]\n}\n\n"]},"metadata":{},"sourceType":"module"}